@import "tailwindcss";

/*
README (short):
- This project uses Tailwind v4 with CSS variables for theming.
- Theme is controlled via `data-theme` on <html> to prevent FOUC; see _document.tsx for bootstrap script.
- Tokens below map to light (greens) and dark (red/black) palettes.
- Use Tailwind classes with CSS vars, e.g., bg-[var(--bg)] text-[var(--text)].
*/

/* Amber glow keyframes */
@keyframes breathe {
  0%, 100% {
    box-shadow: 
      0 0 20px rgba(255, 106, 0, 0.3),
      0 0 40px rgba(255, 106, 0, 0.2),
      0 0 60px rgba(255, 106, 0, 0.1);
  }
  50% {
    box-shadow: 
      0 0 30px rgba(255, 106, 0, 0.4),
      0 0 50px rgba(255, 106, 0, 0.3),
      0 0 70px rgba(255, 106, 0, 0.2);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Design Tokens */
html[data-theme="light"] {
  --bg: #FFFFFF;
  --surface: #F7FAF8;
  --text: #0B1410;
  --brand: #16A34A; /* green 600 */
  --brand-600: #16A34A;
  --brand-500: #22C55E;
  --brand-300: #86EFAC;
  --brand-200: #BBF7D0;
  --muted: #6B7280;
  --ring: color-mix(in srgb, var(--brand) 60%, transparent);
  --amber-600: #ff6a00;
  --amber-500: #ff8a00;
  --amber-300: #ffc38a;
}

html[data-theme="dark"] {
  --bg: #0B0B0C;
  --surface: #141416;
  --text: #EDEDED;
  --brand: #EF4444; /* red 500 */
  --brand-600: #DC2626;
  --brand-500: #EF4444;
  --brand-300: #FCA5A5;
  --brand-200: #FECACA;
  --muted: #9CA3AF;
  --ring: color-mix(in srgb, var(--brand) 60%, transparent);
  --amber-600: #ff6a00;
  --amber-500: #ff8a00;
  --amber-300: #ffc38a;
}

/* Base styles */
:root { color-scheme: light dark; }

* { outline-color: var(--ring); }

html {
  background-color: var(--bg);
}

body {
  background-color: var(--bg);
  color: var(--text);
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  font-size: 18px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

/* Smooth theme transition, respects prefers-reduced-motion */
@media (prefers-reduced-motion: no-preference) {
  html[data-theme-transition="true"] body,
  html[data-theme-transition="true"] * {
    transition: background-color 150ms ease, color 150ms ease, border-color 150ms ease, fill 150ms ease, stroke 150ms ease, box-shadow 150ms ease;
  }
}

/* Utilities */
.focus-ring:focus-visible {
  outline: 2px solid var(--ring);
  outline-offset: 2px;
}

/* Scrollbar styling - matches theme background */
*::-webkit-scrollbar { 
  width: 10px; 
  height: 10px; 
}

*::-webkit-scrollbar-thumb { 
  background: var(--bg); 
  border-radius: 9999px; 
  border: 2px solid var(--bg);
}

*::-webkit-scrollbar-track { 
  background: var(--bg); 
}

*::-webkit-scrollbar-corner {
  background: var(--bg);
}

/* Firefox scrollbar */
* {
  scrollbar-color: var(--bg) var(--bg);
  scrollbar-width: thin;
}

/* Skeleton loaders */
.skeleton {
  position: relative;
  overflow: hidden;
  background-color: color-mix(in srgb, var(--text) 6%, var(--bg));
}
.skeleton::after {
  content: "";
  position: absolute;
  inset: 0;
  transform: translateX(-100%);
  background: linear-gradient(90deg, transparent, color-mix(in srgb, var(--text) 8%, transparent), transparent);
  animation: shimmer 1.4s infinite;
}
@media (prefers-reduced-motion: reduce) {
  .skeleton::after { animation: none; }
}
@keyframes shimmer {
  100% { transform: translateX(100%); }
}

/* Global hover/focus phasing effect for links (buttons use .button class) */
a:not(.no-phase) {
  transition: transform 120ms ease, box-shadow 120ms ease;
}

a:not(.no-phase):hover,
a:not(.no-phase):focus-visible {
  box-shadow: 0 0 0 2px #0B0B0C;
  transform: translateY(-1px);
  border-radius: 9999px;
  background-color: #0B0B0C;
  color: #FFFFFF;
}

/* Dark mode override for links: white background + white text on hover */
html.dark a:not(.no-phase):hover,
html.dark a:not(.no-phase):focus-visible {
  box-shadow: 0 0 0 2px #FFFFFF;
  background-color: #FFFFFF;
  color: #0B0B0C;
}

/* Dark mode: buttons inherit orange gradient from .button class */

/* Global button styles with warm orange/amber fill */
button.button,
[data-ambient="amber"] {
  position: relative;
  overflow: hidden;
  background: linear-gradient(
    135deg,
    var(--amber-600),
    var(--amber-500),
    var(--amber-300),
    var(--amber-500)
  );
  color: #000000;
  border: 1px solid var(--amber-600);
  border-radius: 9999px;
  padding: 12px 24px;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  animation: breathe 3s ease-in-out infinite;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  
  /* Focus styles - enhanced orange glow */
  &:focus-visible {
    outline: 3px solid var(--amber-600);
    outline-offset: 2px;
    box-shadow: 
      0 0 0 3px var(--amber-600),
      0 0 20px rgba(255, 106, 0, 0.6),
      0 0 40px rgba(255, 106, 0, 0.4),
      0 0 60px rgba(255, 106, 0, 0.2);
  }

  /* Hover styles - intensified orange glow */
  &:hover {
    transform: translateY(-2px);
    background: linear-gradient(
      135deg,
      #ff7a00,
      #ff9a00,
      #ffd38a,
      #ff9a00
    );
    box-shadow: 
      0 0 30px rgba(255, 106, 0, 0.7),
      0 0 50px rgba(255, 106, 0, 0.5),
      0 0 70px rgba(255, 106, 0, 0.3);
  }

  /* Orange glow effect layer */
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: conic-gradient(
      from 0deg,
      var(--amber-600),
      var(--amber-500),
      var(--amber-300),
      var(--amber-500),
      var(--amber-600)
    );
    border-radius: 9999px;
    z-index: -1;
    animation: spin 8s linear infinite;
    filter: blur(8px);
    pointer-events: none;
  }

  /* Hover glow effect layer - intensified orange */
  &::after {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    background: conic-gradient(
      from 0deg,
      #ff7a00,
      #ff9a00,
      #ffd38a,
      #ff9a00,
      #ff7a00
    );
    border-radius: 9999px;
    z-index: -2;
    animation: spin 8s linear infinite;
    filter: blur(12px);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  &:hover::after {
    opacity: 0.8;
  }

  &:focus-visible::after {
    opacity: 1;
  }
}

/* Dark mode button styles - orange with white text */
html[data-theme="dark"] button.button,
html[data-theme="dark"] [data-ambient="amber"] {
  background: linear-gradient(
    135deg,
    var(--amber-600),
    var(--amber-500),
    var(--amber-300),
    var(--amber-500)
  );
  color: #ffffff;
  border-color: var(--amber-600);
}

/* Light mode button styles - orange with black text */
html[data-theme="light"] button.button,
html[data-theme="light"] [data-ambient="amber"] {
  background: linear-gradient(
    135deg,
    var(--amber-600),
    var(--amber-500),
    var(--amber-300),
    var(--amber-500)
  );
  color: #000000;
  border-color: var(--amber-600);
}

/* Reduced motion fallback */
@media (prefers-reduced-motion: reduce) {
  button.button,
  [data-ambient="amber"] {
    animation: none;
    
    &::before,
    &::after {
      animation: none;
    }
  }
}

/* Ensure buttons remain keyboard navigable */
button.button:focus,
[data-ambient="amber"]:focus {
  outline: none;
}

button.button:focus-visible,
[data-ambient="amber"]:focus-visible {
  outline: 3px solid var(--amber-600);
  outline-offset: 2px;
}
